#This is my solution to the "Even Fibonacci Numbers" problem 2 on Project Euler,
#Problem description found here: https://projecteuler.net/problem=1 and also below:

"""


Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


"""

#First, build a list of all the fibonacci numbers that do not exceed four million
fibnums = [1,2]
newfibnum = 3
while (newfibnum < 4000001):
    newfibnum = fibnums[len(fibnums)-1]+fibnums[len(fibnums)-2]
    fibnums.append(newfibnum)

#Then, sum up all of the even numbers in that list  
fibnums.pop()
fibnumsum = 0
for x in fibnums:
    if (x % 2 == 0):
        fibnumsum = fibnumsum + x
    else: pass
        
print(fibnumsum)
